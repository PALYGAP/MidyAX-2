#include <QCloseEvent>

#include "bcr2000.h"


BCR2000::BCR2000(QWidget *parent) :
    MIDIControllerGenericDialogMOD1(parent, QString("BCR2000"), BCR2000_MC, 32, 0, 8, 16), //m_numberOfKnobs,  m_numberOfSlidders, m_numberOfParameterButtons, m_numberOfPageSelectButtons
    ui(new Ui::BCR2000)
{
    ui->setupUi(this);
    init();
}


BCR2000::~BCR2000()
{
    delete ui;
}

void BCR2000::init( void)
{
    m_initMode = true;
    m_initMode_timer.start();



//    MIDIControllerGenericDialog::init( );
    MIDIControllerGenericDialogMOD1::init( );

    constructWidgetLists( &ui->gridLayoutWidget );

    connectWidgetOnDialog();

    // Initiate the KNOBS elements
    // fillComboBox(); //TODO: reactivate for non-fixed mapping use
    updateKnobsDisplay();

    m_initMode = false;
    this->update();
}

#define BCR2000_Max_NumberOf_ControlPage_DEFINE 32
#define BCR2000_NumberOf_Encoders_DEFINE 32
#define BCR200_NumberOf_EncSwitchButtons_DEFINE 8
#define BCR2000_Max_NumberOf_QuickAccessPage_DEFINE 4

quint8 BCR2000_Preset_Encoder_Mapping[ BCR2000_Max_NumberOf_ControlPage_DEFINE ]
                                   [ BCR2000_NumberOf_Encoders_DEFINE + BCR200_NumberOf_EncSwitchButtons_DEFINE ] = {
   /* 1 - COMPRESSOR */
   {  0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04,
      0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x0E,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 2 - WHA */
   {  0x00, 0x05, 0x03, 0x01, 0x02, 0x04, 0x0A,	0x06,
      0x0B, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x07,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 3 PHASER */
   {  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x0F, 0x0C,
      0x06, 0x07, 0x08, 0x09, 0x0A, 0x11, 0x0B, 0x0D,
      0x12, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x0E,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 4 - DRIVE  */
   {  0x00, 0x01, 0x02, 0x0C, 0x0D, 0x0E, 0x0F, 0x03,
      0x0A, 0x06, 0x10, 0x0B, 0x08, 0x09, 0x04, 0x12,
      0x11, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,	0xFE  },
   /* 5 - AMP    */
   {  0x00, 0x01, 0x02, 0x03, 0x04, 0x14, 0x05, 0x15,
      0x45, 0x2F, 0x10, 0x1D, 0x13, 0x19, 0x4B, 0x16,
      0x06, 0x07, 0x0A, 0x08, 0x0E, 0x22, 0x46, 0x47,
      0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E,
      0xFE, 0x28, 0xFE, 0x4E, 0x27, 0xFE, 0x36, 0x21  },
   /* 6 - CAB   */
   {  0x00, 0x02, 0x04, 0x13, 0x14, 0x15, 0x16, 0x09,
      0x01, 0x03, 0x0E, 0x0F, 0x18, 0x17, 0x19, 0x0A,
      0x05, 0x06, 0x12, 0x10, 0x11, 0x12, 0xFE, 0xFE,
      0x07, 0x08, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 7 - CHORUS */
   {  0x00, 0x01, 0x02, 0x04, 0x03, 0x05, 0x06, 0x0B,
      0x07, 0x08, 0x09, 0x10, 0x11, 0x14, 0x0A, 0x0C,
      0x12, 0x13, 0x15, 0x16, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 8 FLANGER */
   {  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x0C,
      0x07, 0x08, 0x09, 0x0A, 0x11, 0x12, 0x0B, 0x0D,
      0x13, 0x14, 0x15, 0x16, 0xFE, 0xFE, 0xFE, 0x0E,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 9 - DELAY  */
   {  0x01, 0x02, 0x09, 0x05, 0x06, 0xFE, 0x17, 0x12,
      0x1C, 0x03, 0x08, 0x2D, 0x2E, 0xFE, 0x11,	0x07,
      0x10, 0x3C, 0x2A, 0x2B, 0x2C, 0x2F, 0x0A, 0x0B,
      0x3B, 0x3D, 0x3F, 0x41, 0x3E, 0x40, 0x42, 0x29,
      0xFE, 0xFE, 0xFE, 0x1B, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 10 MULTIDELAY */
   {  0x00, 0x04, 0x08, 0x0C, 0x10, 0x14, 0x18, 0x1D,
      0x01, 0x05, 0x09, 0x0D, 0x11, 0x15, 0x19, 0x1E,
      0x02, 0x06, 0x0A, 0x0E, 0x12, 0x16, 0x1A, 0x1C,
      0x03, 0x07, 0x0B, 0x0F, 0x13, 0x17, 0x1B, 0x23,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 11 ROTARY */
   {  0x00, 0x01, 0x02, 0x03, 0x04, 0x0A, 0x0C, 0x06,
      0x0D, 0x0E, 0x0F, 0xFE, 0xFE, 0xFE, 0x05, 0x07,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x08,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 12 - REVERB */
   {  0x00, 0x01, 0x05, 0x03, 0x07, 0x08, 0x12, 0x0E,
      0x14, 0x15, 0x04, 0x13, 0x09, 0x06, 0x0D, 0x0F,
      0x17, 0x18, 0x20, 0x0B, 0x0C, 0xFE, 0xFE, 0xFE,
      0x0A, 0x02, 0x1A, 0x1C, 0x1E, 0x1B, 0x1D, 0x1F,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 13 - GRAPHICEQ */
   {  0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x0B,
      0x00, 0x01, 0x02, 0x03, 0x04, 0xFE, 0xFE, 0x0C,
      0x05, 0x06, 0x07, 0x08, 0x09, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 14 - PARAMETRICEQ */
   {  0x00, 0x01, 0x02, 0x03, 0x04, 0xFE, 0xFE, 0x13,
      0x05, 0x06, 0x07, 0x08, 0x09, 0xFE, 0xFE, 0x14,
      0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0xFE, 0xFE, 0xFE,
      0x0F, 0xFE, 0xFE, 0xFE, 0x10, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 15 - FILTER */
   {  0x00, 0x03, 0x01, 0x02, 0x07, 0xFE, 0xFE, 0x04,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x09, 0x0A, 0x05,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,	0x06,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 16 - MIXER*/
   {  0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x09, 0x08,
      0x00, 0x01, 0x02, 0x03, 0xFE, 0xFE, 0xFE, 0xFE,
      0x04, 0x05, 0x06, 0x07, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },

   /* 17 - MULTIBANDCOMP */
   {  0x00, 0x01, 0xFE, 0xFE, 0xFE, 0xFE, 0x17, 0x18,
      0x02, 0x03, 0x04, 0x05, 0x06, 0x08, 0x07, 0x19,
      0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0F, 0x0E, 0xFE,
      0x10, 0x11, 0x12, 0x13, 0x14, 0x16, 0x15, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 18 - PITCH */
   {  0x08, 0x0B, 0x0C, 0xFE, 0xFE, 0xFE, 0xFE, 0x18,
      0x03, 0x54, 0x27, 0xFE, 0xFE, 0xFE, 0x17, 0x19,
      0x51, 0x15, 0x16, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 19 - ENHANCER */
   {  0x06, 0x00, 0x01, 0x02, 0x03, 0x07, 0xFE, 0x04,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x08, 0x09, 0x0A,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 20 - EFFECTLOOP */
   {  0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x08, 0x09,
      0x00, 0x01, 0x02, 0x03, 0xFE, 0xFE, 0xFE, 0x0A,
      0x04, 0x05, 0x06, 0x07, 0xFE, 0xFE, 0xFE, 0x0B,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 21 - AMP 2 */
   {  0x00, 0x01, 0x02, 0x03, 0x08, 0x06, 0x07, 0x0D,
      0x04, 0x09, 0x0A, 0x0B, 0xFE, 0xFE, 0x0C, 0x0E,
      0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,
      0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x05, 0xFE, 0xFE  },
   /* 22 - TONEMATCH  */
   {  0x0B, 0x01, 0x02, 0xFE, 0x0A, 0x0C, 0x0D, 0x06,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x07,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0x03, 0x04, 0x00, 0x05, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 23 - QUADCHORUS */
   {  0x06, 0x0A, 0x0E, 0x12, 0x16, 0x1A, 0x1E, 0x01,
      0x07, 0x0B, 0x0F, 0x13, 0x17, 0x1B, 0x1F, 0x03,
      0x08, 0x0C, 0x10, 0x14, 0x18, 0x1C, 0x20, 0x04,
      0x09, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x21, 0x05,
      0x24, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 24 - SYNTH */
   {  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0xFE, 0x18,
      0x08, 0x09, 0x0A, 0xFE, 0xFE, 0xFE, 0x19, 0x17,
      0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x07, 0x06,
      0x13, 0x14, 0x15, 0xFE, 0xFE, 0xFE, 0x12, 0x11,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 25 - PANTREM */
   {  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0xFE, 0x07,
      0x0B, 0x0C, 0x0D, 0xFE, 0xFE, 0xFE, 0x06, 0x08,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x09,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 26 - MEGATAP */
   {  0x00, 0x04, 0x08, 0xFE, 0xFE, 0xFE, 0xFE, 0x0C,
      0x01, 0x05, 0x09, 0xFE, 0xFE, 0xFE, 0x0B, 0x0D,
      0x02, 0x06, 0x0A, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0x03, 0x07, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 27 - GATEEXPANDER */
   {  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0xFE, 0x09,
      0x06, 0x07, 0xFE, 0xFE, 0xFE, 0xFE, 0x08, 0x0A,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x0B,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 28 - NOISEGATE */
   {  0x00, 0x01, 0x02, 0x03, 0x04, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 29 - RESONATOR */
   {  0x09, 0x0D, 0x11, 0x15, 0x19, 0x1D, 0x05, 0x22,
      0x0A, 0x0E, 0x12, 0x16, 0x1A, 0x1E, 0x21, 0x23,
      0x0B, 0x0F, 0x13, 0x17, 0x1B, 0x1F, 0x04, 0x06,
      0x0C, 0x10, 0x14, 0x18, 0x1C, 0x20, 0x07, 0x08,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 30 - FORMANT */
   {  0x00, 0x01, 0x02, 0x03, 0x04, 0x0A, 0xFE, 0x06,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x05, 0x07,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 31 - CROSSOVER */
   {  0xFE, 0xFE, 0x00, 0x01, 0xFE, 0xFE, 0xFE, 0x0B,
      0x02, 0x06, 0xFE, 0xFE, 0x03, 0x05, 0x0A, 0x0C,
      0x06, 0x08, 0xFE, 0xFE, 0x07, 0x09, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  },
   /* 32 - VOLPAN */
   {  0x00, 0x01, 0x02, 0xFE, 0xFE, 0xFE, 0x08, 0x06,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x04, 0x05,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x03,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
      0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE  }
};



//quint8 BCR2000_QuickAccessPage_Mapping[ BCR2000_Max_NumberOf_QuickAccessPage_DEFINE ]
//                                   [ BCR2000_NumberOf_Encoders_DEFINE + BCR200_NumberOf_EncSwitchButtons_DEFINE * 2] = {
//   /* 1 - SPEC PAGE 1 */
//   {  0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//   },
//   /* 2 - SPEC PAGE 2 */
//   {  0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//   },
//   /* 3 - SPEC PAGE 3 */
//   {  0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//   },
//   /* 4 - SPEC PAGE 4 */
//   {  0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//      0x0C, 0x00, 0x01, 0x02, 0x03, 0x05, 0x06,	0x04, 0x07, 0x08, 0x0A, 0x0D, 0x0F, 0x10, 0xFE, 0x0B,
//   }
//};
